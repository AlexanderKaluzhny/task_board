{"version":3,"sources":["components/Pagination.jsx","constants.jsx","components/TaskBoardHeader.jsx","components/Badges.jsx","components/TaskListItem.jsx","components/HeaderStatusFilterSelect.jsx","components/Table.jsx","components/TaskList.jsx","components/TasksStateContainer.jsx","components/dialogs/TitledDialog.jsx","components/dialogs/InfoDialog.jsx","components/dialogs/CreateEditCommons.jsx","components/dialogs/EditDialog.jsx","components/dialogs/CreateDialog.jsx","components/dialogs/DeleteDialog.jsx","components/dialogs/MarkDoneDialog.jsx","components/withDialogs.jsx","components/NavBar.jsx","components/Layout.jsx","App.jsx","serviceWorker.js","index.js","utils.js"],"names":["Pagination","props","limit","count","onPageChange","pageCount","Math","ceil","react_default","a","createElement","color","variant","onChange","event","page","TASK_STATUSES","NOT_DONE","DONE","DEFAULT_LIMIT","DEFAULT_OFFSET","DEFAULT_STATUS_FILTER","taskActions","None","ShowTaskInfo","EditTask","CreateTask","DeleteTask","TaskMarkDone","StyledSearchBar","styled","SearchBar","marginBlockStart","marginBlockEnd","width","StyledAddButton","Button","minWidth","minHeight","fontSize","padding","TaskBoardHeader","state","searchValue","_this2","this","_this$props","offset","tasksTotalNumber","onSearchRequested","setShowDialog","Fragment","Grid","container","alignItems","justify","direction","item","xs","aria-label","onClick","Add_default","components_Pagination","value","newValue","setState","onCancelSearch","onRequestSearch","React","Component","DoneBadge","MuiBadge","textAlign","boxSizing","fontWeight","backgroundColor","borderRadius","NotDoneBadge","ActionsTableCell","TableCell","TaskListItem","task","data","isOwnedByUser","currentUserId","created_by","isTaskDone","status","TableRow","component","scope","Typography","Link","onTaskNameClick","name","align","caption","created_by_username","accomplished_by","status_readable","className","concat","accomplished_by_username","IconButton","onTaskEditClick","Edit_default","onTaskDeleteClick","Delete_default","disabled","onTaskMarkDoneClick","Done_default","useStyles","makeStyles","theme","formControl","margin","spacing","HeaderStatusFilterSelect","classes","FormControl","Select","input","native","statusFilter","onStatusFilterChanged","target","OutlinedInput","Table","MuiTable","Paper","MuiPaper","maxHeight","overflow","StyledTableCell","components_Table","Table_Paper","Table_Table","size","TableHead","style","display","alignContent","justifyContent","components_HeaderStatusFilterSelect","TableBody","children","TaskList","taskList","_this$props2","length","map","listItem","id","key","ApiRequestor","getRequestContext","method","url","onSuccessHandler","onErrorHandler","type","dataType","context","_this","success","obj","textStatus","jqXHR","error","xhr","post","postContext","$","ajax","patch","patchContext","delete","deleteContext","TasksStateContainer","isLoaded","currentTotalNumber","onEditTask","taskId","partialData","onSuccess","onError","onEditSuccess","onRequestError","responseJSON","onCreateTask","taskData","onCreateSuccess","undefined","onDeleteTask","onDeleteSuccess","detail","onTaskMarkDone","onTaskMarkDoneSuccess","serverResponseTask","modifiedList","Object","toConsumableArray","idx","findIndex","modifiedTask","prop","unshift","splice","console","log","fetchTasks","prevProps","query","_this$props$query","queryParams","search","_this3","fetch","qs","stringify","getQueryParams","then","res","json","result","results","onTotalNumberReceived","getTaskManageFuncs","DialogContent","MuiDialogContent","flexDirection","DialogTitle","withStyles","root","closeButton","position","right","top","palette","grey","onClose","disableTypography","Close_default","TitledDialog","Dialog","open","closeDialog","transitionDuration","enter","aria-labelledby","TitledDialog_DialogTitle","title","taskInformationBody","Divider","description","TaskInfoDialog","taskObject","assign","TitledDialog_DialogContent","DialogActions","StyledDialogContent","StyledErrorMessage","TaskFieldInput","_ref","field","_ref$form","form","touched","errors","objectWithoutProperties","_React$useState","useState","_React$useState2","slicedToArray","labelWidth","setLabelWidth","labelRef","useRef","useEffect","current","offsetWidth","fullWidth","InputLabel","ref","htmlFor","TaskFieldSelectStatus","_ref2","_ref2$form","TextField","label","select","SelectProps","renderFormikForm","errorText","msg","_ref3","values","dirty","isSubmitting","handleBlur","handleChange","handleSubmit","formik_esm","render","multiline","EditDialog","initialValues","objectSpread","onSubmit","actions","setSubmitting","enqueueSnackbar","serverStatus","setErrors","setStatus","CreateDialog","DialogContentText","MuiDialogContentText","TaskDeleteDialog","DeleteDialog_DialogContentText","responseText","DoneButton","borderColor","TaskMarkDoneDialog","MarkDoneDialog_DialogContentText","withDialogs","WrappedComponent","WithDialogs","_React$Component","_getPrototypeOf2","classCallCheck","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","showDialog","actionType","onDialogClose","getDialog","taskManageFuncs","DialogComponent","_this$state$showDialo","dialogProps","withSnackbar","TaskEditDialog","TaskCreateDialog","find","inherits","createClass","displayName","getDisplayName","appBar","borderBottom","divider","toolbar","flexWrap","toolbarTitle","flexGrow","link","profile","accountCircle","marginLeft","NavBar","AppBar","elevation","Toolbar","noWrap","profileUrl","href","fullName","AccountCircle_default","StyledDiv","overflowX","Layout","build","anchorOrigin","vertical","horizontal","autoHideDuration","createMuiTheme","primary","main","blue","getQueryObject","memoizeOne","onPageChanged","pageNumber","onTaskStatusFilterChanged","selectedValue","onTasksTotalNumberReceived","newNumber","tasks_total","current_user","profile_url","fullname","_this$state","ThemeProvider","components_TaskBoardHeader","components_TasksStateContainer","components_TaskList","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","jQuery","ajaxSetup","beforeSend","settings","test","crossDomain","csrftoken","cookieValue","cookie","cookies","split","i","trim","substring","decodeURIComponent","getCookie","setRequestHeader"],"mappings":"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","file":"static/js/main.386f6690.chunk.js","sourcesContent":["/* eslint-disable react/prefer-stateless-function */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MuiPagination from '@material-ui/lab/Pagination';\n\nfunction Pagination(props) {\n  const { limit, count, onPageChange } = props;\n\n  const pageCount = Math.ceil(count / limit);\n\n  return (\n    <MuiPagination\n      color=\"primary\"\n      variant=\"outlined\"\n      count={pageCount}\n      onChange={(event, page) => onPageChange(page - 1)}\n    />\n  );\n}\n\nPagination.propTypes = {\n  limit: PropTypes.number.isRequired,\n  count: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n};\n\nexport default Pagination;\n","export const TASK_STATUSES = {\n  NOT_DONE: 0,\n  DONE: 1,\n};\n\nexport const DEFAULT_LIMIT = 25;\nexport const DEFAULT_OFFSET = 0;\nexport const DEFAULT_STATUS_FILTER = '-1';\n\nexport const taskActions = {\n  None: 0,\n  ShowTaskInfo: 1,\n  EditTask: 2,\n  CreateTask: 3,\n  DeleteTask: 4,\n  TaskMarkDone: 5,\n};\n","import React from 'react';\nimport { styled } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport SearchBar from 'material-ui-search-bar';\nimport Pagination from './Pagination';\nimport { taskActions } from '../constants';\n\nconst StyledSearchBar = styled(SearchBar)({\n  marginBlockStart: '1em',\n  marginBlockEnd: '1em',\n  width: '95%',\n});\n\nconst StyledAddButton = styled(Button)({\n  minWidth: '3em',\n  minHeight: '2.5em',\n  fontSize: '1rem',\n  padding: '0',\n});\n\nclass TaskBoardHeader extends React.Component {\n  state = {\n    searchValue: '',\n  };\n\n  render() {\n    const {\n      limit, offset, tasksTotalNumber, onPageChange, onSearchRequested, setShowDialog,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <Grid container alignItems=\"center\" justify=\"flex-start\" direction=\"row\">\n          <Grid item xs={1}>\n            <StyledAddButton\n              variant=\"outlined\"\n              color=\"primary\"\n              aria-label=\"add\"\n              onClick={() => setShowDialog(taskActions.CreateTask)}\n            >\n              <AddIcon fontSize=\"large\" />\n            </StyledAddButton>\n          </Grid>\n          <Grid item xs={6}>\n            {!!tasksTotalNumber && (\n              <Pagination limit={limit} offset={offset} count={tasksTotalNumber} onPageChange={onPageChange} />\n            )}\n          </Grid>\n          <Grid item xs={5}>\n            <StyledSearchBar\n              value={this.state.searchValue}\n              onChange={newValue => this.setState({ searchValue: newValue })}\n              onCancelSearch={() => onSearchRequested(null)}\n              onRequestSearch={() => onSearchRequested(this.state.searchValue)}\n            />\n          </Grid>\n        </Grid>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default TaskBoardHeader;\n","import MuiBadge from '@material-ui/core/Badge';\nimport { styled } from '@material-ui/core/styles';\n\nconst DoneBadge = styled(MuiBadge)({\n  minWidth: '3rem',\n  padding: '0 6px',\n  textAlign: 'center',\n  // -webkit-box-sizing: 'border-box',\n  boxSizing: 'border-box',\n\n  fontWeight: '300',\n  fontSize: '0.9rem',\n  backgroundColor: '#26a69a',\n  borderRadius: '2px',\n\n  color: \"white\",\n});\n\nconst NotDoneBadge = styled(DoneBadge)({\n  backgroundColor: \"#337ab7\",\n});\n\nexport { DoneBadge, NotDoneBadge };\n","/* eslint-disable react/prefer-stateless-function */\nimport React from 'react';\nimport { styled } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport DoneIcon from '@material-ui/icons/Done';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Link from '@material-ui/core/Link';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport { DoneBadge, NotDoneBadge } from './Badges';\n\nconst ActionsTableCell = styled(TableCell)({\n  // eliminates shrinking of action buttons cell when there is only one button\n  width: '25%',\n});\n\nexport default function TaskListItem(props) {\n  const task = props.data;\n  const isOwnedByUser = props.currentUserId === task.created_by;\n  const isTaskDone = task.status === 1;\n\n  return (\n    <TableRow>\n      <TableCell component=\"th\" scope=\"row\">\n        <Typography>\n          <Link component=\"button\" variant=\"body1\" onClick={() => props.onTaskNameClick()}>\n            {task.name}\n          </Link>\n        </Typography>\n      </TableCell>\n      <TableCell align=\"center\">\n        <Typography caption=\"body1\">{task.created_by_username}</Typography>\n      </TableCell>\n      <TableCell align=\"center\">\n        {task.accomplished_by && (\n          <React.Fragment>\n            <DoneBadge>{task.status_readable}</DoneBadge>\n            <Typography variant=\"caption\">\n              <span className=\"task-accomplished-by\">{`by ${task.accomplished_by_username}`}</span>\n            </Typography>\n          </React.Fragment>\n        )}\n        {!task.accomplished_by && <NotDoneBadge>{task.status_readable}</NotDoneBadge>}\n      </TableCell>\n      <ActionsTableCell align=\"center\">\n        {isOwnedByUser && (\n          <React.Fragment>\n            <IconButton aria-label=\"edit\" onClick={() => props.onTaskEditClick()}>\n              <EditIcon color=\"primary\" />\n            </IconButton>\n            <IconButton aria-label=\"delete\" onClick={() => props.onTaskDeleteClick()}>\n              <DeleteIcon color=\"primary\" />\n            </IconButton>\n          </React.Fragment>\n        )}\n        <IconButton aria-label=\"Mark as Done\" disabled={isTaskDone} onClick={() => props.onTaskMarkDoneClick()}>\n          <DoneIcon color={!isTaskDone ? 'primary' : 'disabled'} />\n        </IconButton>\n      </ActionsTableCell>\n    </TableRow>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n  },\n}));\n\nfunction HeaderStatusFilterSelect(props) {\n  const classes = useStyles();\n\n  return (\n    <FormControl variant=\"outlined\" className={classes.formControl}>\n      <Select\n        className={classes.input}\n        native\n        value={props.statusFilter}\n        onChange={event => props.onStatusFilterChanged(event.target.value)}\n        input={<OutlinedInput margin=\"dense\" />}\n      >\n        <option value={-1}>All</option>\n        <option value={0}>Not Done</option>\n        <option value={1}>Done</option>\n      </Select>\n    </FormControl>\n  );\n}\n\nexport default HeaderStatusFilterSelect;\n","import React from 'react';\nimport { styled } from '@material-ui/core/styles';\nimport MuiTable from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport MuiPaper from '@material-ui/core/Paper';\nimport HeaderStatusFilterSelect from './HeaderStatusFilterSelect';\n\nconst Table = styled(MuiTable)({});\n\nconst Paper = styled(MuiPaper)({\n  width: '99%',\n  margin: 'auto',\n  maxHeight: '75vh',\n  overflow: 'auto',\n});\n\nconst StyledTableCell = styled(TableCell)({\n  backgroundColor: '#f5f5f5',\n  color: 'black',\n  fontSize: '1rem',\n});\n\nexport default function (props) {\n  return (\n    <Paper>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>Name</StyledTableCell>\n            <StyledTableCell align=\"center\">Owner</StyledTableCell>\n            <StyledTableCell align=\"center\">\n              <div\n                style={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  alignContent: 'center',\n                  justifyContent: 'center',\n                }}\n              >\n                <div>Status</div>\n                <HeaderStatusFilterSelect\n                  statusFilter={props.statusFilter}\n                  onStatusFilterChanged={props.onStatusFilterChanged}\n                />\n              </div>\n            </StyledTableCell>\n            <StyledTableCell align=\"center\">Actions</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>{props.children}</TableBody>\n      </Table>\n    </Paper>\n  );\n}\n","/* eslint-disable react/prefer-stateless-function */\nimport React from 'react';\nimport TaskListItem from './TaskListItem';\nimport TaskListTable from './Table';\nimport { taskActions } from '../constants';\n\nclass TaskList extends React.Component {\n  render() {\n    const { taskList } = this.props;\n    const { currentUserId, statusFilter } = this.props;\n    const { onStatusFilterChanged, setShowDialog } = this.props;\n\n    return (\n      <React.Fragment>\n        <TaskListTable statusFilter={statusFilter} onStatusFilterChanged={onStatusFilterChanged}>\n          {taskList.length > 0\n            && taskList.map(listItem => (\n              <TaskListItem\n                id={listItem.id}\n                key={listItem.id}\n                data={listItem}\n                currentUserId={currentUserId}\n                onTaskNameClick={() => setShowDialog(taskActions.ShowTaskInfo, listItem.id)}\n                onTaskEditClick={() => setShowDialog(taskActions.EditTask, listItem.id)}\n                onTaskDeleteClick={() => setShowDialog(taskActions.DeleteTask, listItem.id)}\n                onTaskMarkDoneClick={() => setShowDialog(taskActions.TaskMarkDone, listItem.id)}\n              />\n            ))}\n        </TaskListTable>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default TaskList;\n","/* eslint-disable react/sort-comp */\nimport $ from 'jquery';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport qs from 'query-string';\nimport { TASK_STATUSES } from '../constants';\n\nclass ApiRequestor {\n  getRequestContext = (method, url, data, onSuccessHandler, onErrorHandler) => ({\n    type: method,\n    dataType: 'json',\n    url,\n    data,\n    context: this,\n    success: (obj, textStatus, jqXHR) => onSuccessHandler(obj),\n    error: (xhr, textStatus, error) => onErrorHandler(xhr, textStatus, error),\n  });\n\n  post = (url, data, onSuccessHandler, onErrorHandler) => {\n    const postContext = this.getRequestContext('POST', url, data, onSuccessHandler, onErrorHandler);\n    $.ajax(postContext);\n  };\n\n  patch = (url, data, onSuccessHandler, onErrorHandler) => {\n    const patchContext = this.getRequestContext('PATCH', url, data, onSuccessHandler, onErrorHandler);\n    $.ajax(patchContext);\n  };\n\n  delete = (url, onSuccessHandler, onErrorHandler) => {\n    const deleteContext = this.getRequestContext('DELETE', url, /* no data */ '', onSuccessHandler, onErrorHandler);\n    $.ajax(deleteContext);\n  };\n}\n\nclass TasksStateContainer extends React.Component {\n  static propTypes = {\n    query: PropTypes.exact({\n      searchValue: PropTypes.string.isRequired,\n      limit: PropTypes.number.isRequired,\n      offset: PropTypes.number.isRequired,\n      statusFilter: PropTypes.string.isRequired,\n    }).isRequired,\n    onTotalNumberReceived: PropTypes.func.isRequired,\n  };\n\n  state = {\n    isLoaded: false,\n    taskList: [],\n    currentTotalNumber: 0,\n  };\n\n  componentDidMount() {\n    this.fetchTasks();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.query !== this.props.query) {\n      this.fetchTasks();\n    }\n  }\n\n  onEditTask = (taskId, partialData, onSuccess, onError) => {\n    const api = new ApiRequestor();\n    api.patch(\n      `/api/tasks/${taskId}/`,\n      partialData,\n      (task) => {\n        this.onEditSuccess(taskId, task);\n        onSuccess(task);\n      },\n      (xhr, textStatus, error) => {\n        this.onRequestError(taskId, xhr.status, error);\n        onError(xhr.status, error, xhr.responseJSON);\n      },\n    );\n  };\n\n  onCreateTask = (taskData, onSuccess, onError) => {\n    const api = new ApiRequestor();\n    api.post(\n      '/api/tasks/',\n      taskData,\n      (task) => {\n        this.onCreateSuccess(task);\n        onSuccess(task);\n      },\n      (xhr, textStatus, error) => {\n        this.onRequestError(undefined, xhr.status, error);\n        onError(xhr.status, error, xhr.responseJSON);\n      },\n    );\n  };\n\n  onDeleteTask = (taskId, onSuccess, onError) => {\n    const api = new ApiRequestor();\n    api.delete(\n      `/api/tasks/${taskId}/`,\n      () => {\n        this.onDeleteSuccess(taskId);\n        onSuccess();\n      },\n      (xhr, textStatus, error) => {\n        this.onRequestError(taskId, xhr.status, error);\n        onError(xhr.status, error, xhr.responseJSON.detail);\n      },\n    );\n  };\n\n  onTaskMarkDone = (taskId, onSuccess, onError) => {\n    const api = new ApiRequestor();\n    api.patch(\n      `/api/tasks/${taskId}/`,\n      { status: TASK_STATUSES.DONE },\n      (task) => {\n        this.onTaskMarkDoneSuccess(taskId, task);\n        onSuccess(task);\n      },\n      (xhr, textStatus, error) => {\n        this.onRequestError(taskId, xhr.status, error);\n        onError(xhr.status, error, xhr.responseJSON);\n      },\n    );\n  }\n\n  getTaskManageFuncs() {\n    return {\n      onEditTask: this.onEditTask,\n      onCreateTask: this.onCreateTask,\n      onDeleteTask: this.onDeleteTask,\n      onTaskMarkDone: this.onTaskMarkDone,\n    };\n  }\n\n  getQueryParams() {\n    const {\n      searchValue, limit, offset, statusFilter,\n    } = this.props.query;\n    const queryParams = { limit, offset };\n    if (statusFilter !== '-1') {\n      queryParams.status = statusFilter;\n    }\n    if (searchValue) {\n      queryParams.search = searchValue;\n    }\n\n    return queryParams;\n  }\n\n  fetchTasks() {\n    fetch(`api/tasks/?${qs.stringify(this.getQueryParams())}`)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState(\n            {\n              isLoaded: true,\n              taskList: result.results,\n              currentTotalNumber: result.count,\n            },\n            () => this.props.onTotalNumberReceived(result.count),\n          );\n        },\n        error => this.setState({ isLoaded: false, error }),\n      );\n  }\n\n  onEditSuccess = (taskId, serverResponseTask) => {\n    const modifiedList = [...this.state.taskList];\n    const idx = modifiedList.findIndex(task => task.id === taskId);\n    const modifiedTask = modifiedList[idx];\n\n    for (const prop in serverResponseTask) {\n      modifiedTask[prop] = serverResponseTask[prop];\n    }\n\n    this.setState({ taskList: modifiedList });\n  };\n\n  onCreateSuccess = (serverResponseTask) => {\n    let modifiedList = [...this.state.taskList];\n    modifiedList.unshift(serverResponseTask);\n    this.setState({ taskList: modifiedList });\n  }\n\n  onDeleteSuccess = (taskId) => {\n    let modifiedList = [...this.state.taskList];\n    const idx = modifiedList.findIndex(task => task.id === taskId);\n\n    modifiedList.splice(idx, 1);\n    this.setState({ taskList: modifiedList });\n  }\n\n  onTaskMarkDoneSuccess = (taskId, serverResponseTask) => {\n    return this.onEditSuccess(taskId, serverResponseTask);\n  }\n\n  onRequestError = (taskId, status, error) => {\n    console.log(status, error);\n  };\n\n  render() {\n    return this.props.children(this.getTaskManageFuncs(), this.state.taskList);\n  }\n}\n\nexport default TasksStateContainer;\n","import React from 'react';\nimport { withStyles, styled } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\n\nexport const DialogContent = styled(MuiDialogContent)({\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'space-evenly',\n  minWidth: '50ch',\n});\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root}>\n      <Typography variant=\"h6\">{children}</Typography>\n      <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n        <CloseIcon />\n      </IconButton>\n    </MuiDialogTitle>\n  );\n});\n\nexport default props => (\n  <Dialog open onClose={props.closeDialog} transitionDuration={{ enter: 50 }} aria-labelledby=\"form-dialog-title\">\n    <DialogTitle id=\"customized-dialog-title\" onClose={props.closeDialog}>\n      {props.title}\n    </DialogTitle>\n    {props.children}\n  </Dialog>\n);\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Typography from '@material-ui/core/Typography';\nimport { DoneBadge, NotDoneBadge } from '../Badges';\nimport TitledDialog, { DialogContent } from './TitledDialog';\n\nexport const taskInformationBody = task => (\n  <React.Fragment>\n    <Typography variant=\"body1\" component=\"div\">\n      <p>\n        <b>Name: </b>\n        {' '}\n        {task.name}\n      </p>\n    </Typography>\n    <Divider />\n    <Typography variant=\"body1\" component=\"div\">\n      <p>\n        <b>Created by: </b>\n        {' '}\n        {task.created_by_username}\n      </p>\n      <p>\n        <b>Status: </b>\n        {task.accomplished_by && <DoneBadge>{task.status_readable}</DoneBadge>}\n        {!task.accomplished_by && <NotDoneBadge>{task.status_readable}</NotDoneBadge>}\n      </p>\n    </Typography>\n    <Divider />\n    <Typography variant=\"body1\" component=\"div\">\n      <p>\n        <b>Description: </b>\n        {' '}\n        {task.description}\n      </p>\n    </Typography>\n  </React.Fragment>\n);\n\nexport default function TaskInfoDialog(props) {\n  const { taskObject: task } = props;\n\n  return (\n    <TitledDialog title=\"Task Information\" {...props}>\n      <DialogContent>{taskInformationBody(task)}</DialogContent>\n      <DialogActions>\n        <Button variant=\"outlined\" onClick={props.closeDialog} color=\"primary\">\n          OK\n        </Button>\n      </DialogActions>\n    </TitledDialog>\n  );\n}\n","/* eslint-disable react/prefer-stateless-function */\nimport React from 'react';\nimport { styled, makeStyles } from '@material-ui/core/styles';\nimport { Form, Field, ErrorMessage } from 'formik';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport { TASK_STATUSES } from '../../constants';\n\nexport const StyledDialogContent = styled(MuiDialogContent)({\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'space-evenly',\n  minWidth: '50ch',\n  overflow: 'visible',\n});\n\n// moves error message closer to the input\nexport const StyledErrorMessage = styled('div')({\n  margin: '-.85em 0',\n  color: 'red',\n  fontSize: '.85em',\n});\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: '1em 0',\n  },\n}));\n\nconst TaskFieldInput = ({\n  field, // { name, value, onChange, onBlur }\n  form: { touched, errors }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n  ...props\n}) => {\n  const [labelWidth, setLabelWidth] = React.useState(0);\n  const labelRef = React.useRef(null);\n  const classes = useStyles();\n\n  React.useEffect(() => {\n    setLabelWidth(labelRef.current.offsetWidth);\n  }, []);\n\n  return (\n    <FormControl className={classes.formControl} variant=\"outlined\" fullWidth>\n      <InputLabel ref={labelRef} htmlFor=\"component-outlined\">\n        {props.title}\n      </InputLabel>\n      <OutlinedInput id=\"component-outlined\" labelWidth={labelWidth} {...field} {...props} />\n    </FormControl>\n  );\n};\n\nconst TaskFieldSelectStatus = ({\n  field, // { name, value, onChange, onBlur }\n  form: { touched, errors }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n  ...props\n}) => {\n  const classes = useStyles();\n\n  return (\n    <FormControl className={classes.formControl} variant=\"outlined\" fullWidth>\n      <TextField\n        label={props.title}\n        select\n        SelectProps={{\n          native: true,\n        }}\n        variant=\"outlined\"\n        {...field}\n        {...props}\n      >\n        <option key={0} value={TASK_STATUSES.NOT_DONE}>\n          Not Done\n        </option>\n        <option key={1} value={TASK_STATUSES.DONE}>\n          Done\n        </option>\n      </TextField>\n    </FormControl>\n  );\n};\n\nexport function renderFormikForm(props) {\n  const errorText = msg => <StyledErrorMessage>{msg}</StyledErrorMessage>;\n  return ({\n    values, errors, dirty, status, touched, handleBlur, handleChange, handleSubmit, isSubmitting,\n  }) => (\n    <Form>\n      <StyledDialogContent>\n        {status && status.error && <div style={{ color: 'red' }}>{status.msg}</div>}\n        <Field type=\"text\" name=\"name\" title=\"Name\" component={TaskFieldInput} />\n        <ErrorMessage name=\"name\" render={errorText} />\n        <Field type=\"text\" name=\"status\" title=\"Status\" component={TaskFieldSelectStatus} />\n        <ErrorMessage name=\"status\" render={errorText} />\n        <Field multiline type=\"text\" name=\"description\" title=\"Description\" component={TaskFieldInput} />\n        <ErrorMessage name=\"description\" render={errorText} />\n      </StyledDialogContent>\n      <DialogActions>\n        <Button variant=\"outlined\" type=\"submit\" color=\"primary\" disabled={isSubmitting || !dirty}>\n          Apply\n        </Button>\n        <Button variant=\"outlined\" color=\"secondary\" onClick={props.closeDialog}>\n          Cancel\n        </Button>\n      </DialogActions>\n    </Form>\n  );\n}\n","/* eslint-disable react/prefer-stateless-function */\nimport React from 'react';\nimport { Formik } from 'formik';\nimport { renderFormikForm } from './CreateEditCommons';\nimport TitledDialog from './TitledDialog';\n\nclass EditDialog extends React.Component {\n  render() {\n    const { props } = this;\n\n    return (\n      <TitledDialog title=\"Edit Task\" {...props}>\n        <Formik\n          initialValues={{ ...props.taskObject }}\n          onSubmit={(values, actions) => {\n            const { name, status, description } = values;\n            props.onEditTask(\n              props.taskObject.id,\n              { name, status, description },\n              /* success handler: */\n              (data) => {\n                actions.setSubmitting(false);\n                props.enqueueSnackbar(`Task \"${name}\" updated.`, { variant: 'success' });\n                props.closeDialog();\n              },\n              /* error handler: */\n              (serverStatus, error, responseJSON) => {\n                actions.setSubmitting(false);\n                actions.setErrors(responseJSON);\n                if (serverStatus > 400) {\n                  actions.setStatus({\n                    error: true,\n                    msg: `Error ${serverStatus}: ${error}`,\n                  });\n                }\n              },\n            );\n          }}\n          render={renderFormikForm(props)}\n        />\n      </TitledDialog>\n    );\n  }\n}\n\nexport default EditDialog;\n","/* eslint-disable react/prefer-stateless-function */\nimport React from 'react';\nimport { Formik } from 'formik';\nimport { TASK_STATUSES } from '../../constants';\nimport { renderFormikForm } from './CreateEditCommons';\nimport TitledDialog from './TitledDialog';\n\nclass CreateDialog extends React.Component {\n  render() {\n    const { props } = this;\n\n    return (\n      <TitledDialog title=\"Create New Task\" {...props}>\n        <Formik\n          initialValues={{ status: TASK_STATUSES.NOT_DONE, name: '', description: '' }}\n          onSubmit={(values, actions) => {\n            const { name, status, description } = values;\n            props.onCreateTask(\n              { name, status, description },\n              /* success handler: */\n              (data) => {\n                actions.setSubmitting(false);\n                props.enqueueSnackbar(`Task \"${data.name}\" created.`, { variant: 'success' });\n                props.closeDialog();\n              },\n              /* error handler: */\n              (serverStatus, error, responseJSON) => {\n                actions.setSubmitting(false);\n                actions.setErrors(responseJSON);\n                if (serverStatus > 400) {\n                  actions.setStatus({\n                    error: true,\n                    msg: `Error ${serverStatus}: ${error}`,\n                  });\n                }\n              },\n            );\n          }}\n          render={renderFormikForm(props)}\n        />\n      </TitledDialog>\n    );\n  }\n}\n\nexport default CreateDialog;\n","import React from 'react';\nimport { styled } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport MuiDialogContentText from '@material-ui/core/DialogContentText';\nimport TitledDialog, { DialogContent } from './TitledDialog';\nimport { taskInformationBody } from './InfoDialog';\n\nconst DialogContentText = styled(MuiDialogContentText)({\n  color: 'red',\n});\n\nexport default function TaskDeleteDialog(props) {\n  const { taskObject: task } = props;\n\n  return (\n    <TitledDialog title=\"Delete Task\" {...props}>\n      <DialogContent>\n        <DialogContentText>Are you sure you want to delete this task?</DialogContentText>\n        {taskInformationBody(task)}\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"outlined\"\n          color=\"secondary\"\n          onClick={() => {\n            // closing the dialog early, otherwise after successful delete\n            // it will be rerendered with undefined task.\n            props.closeDialog();\n            props.onDeleteTask(\n              props.taskObject.id,\n              /* success handler: */\n              () => {\n                props.enqueueSnackbar(`Task \"${task.name}\" deleted.`, { variant: 'success' });\n              },\n              /* error handler: */\n              (serverStatus, error, responseText) => {\n                props.enqueueSnackbar(`Error ${serverStatus}: ${error}. ${responseText}`, { variant: 'error' });\n              },\n            );\n          }}\n        >\n          Delete\n        </Button>\n        <Button variant=\"outlined\" type=\"submit\" color=\"primary\" onClick={props.closeDialog}>\n          Cancel\n        </Button>\n      </DialogActions>\n    </TitledDialog>\n  );\n}\n","import React from 'react';\nimport { styled } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport MuiDialogContentText from '@material-ui/core/DialogContentText';\nimport TitledDialog, { DialogContent } from './TitledDialog';\nimport { taskInformationBody } from './InfoDialog';\n\nconst DialogContentText = styled(MuiDialogContentText)({\n  color: '#26a69a',\n});\n\nconst DoneButton = styled(Button)({\n  color: '#26a69a',\n  borderColor: 'inherit',\n});\n\nexport default function TaskMarkDoneDialog(props) {\n  const { taskObject: task } = props;\n\n  return (\n    <TitledDialog title=\"Mark as Done\" {...props}>\n      <DialogContent>\n        <DialogContentText>Are you sure you want to mark this task as \"Done\" by you?</DialogContentText>\n        {taskInformationBody(task)}\n      </DialogContent>\n      <DialogActions>\n        <DoneButton\n          variant=\"outlined\"\n          onClick={() => {\n            // closing the dialog early, otherwise after successful delete\n            // it will be rerendered with undefined task.\n            props.closeDialog();\n            props.onTaskMarkDone(\n              props.taskObject.id,\n              /* success handler: */\n              () => {\n                props.enqueueSnackbar(`Task \"${task.name}\" marked as \"Done\"`, { variant: 'success' });\n              },\n              /* error handler: */\n              (serverStatus, error, responseText) => {\n                props.enqueueSnackbar(`Error ${serverStatus}: ${error}. ${responseText}`, { variant: 'error' });\n              },\n            );\n          }}\n        >\n          Done\n        </DoneButton>\n        <Button variant=\"outlined\" type=\"submit\" onClick={props.closeDialog}>\n          Cancel\n        </Button>\n      </DialogActions>\n    </TitledDialog>\n  );\n}\n","import React from 'react';\nimport { withSnackbar } from 'notistack';\nimport TaskInfoDialog from './dialogs/InfoDialog';\nimport TaskEditDialog from './dialogs/EditDialog';\nimport TaskCreateDialog from './dialogs/CreateDialog';\nimport TaskDeleteDialog from './dialogs/DeleteDialog';\nimport TaskMarkDoneDialog from './dialogs/MarkDoneDialog';\nimport { taskActions } from '../constants';\n\nfunction getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n}\n\n/*\n* HoC that provides the capability to show the Task related dialogs.\n*/\nconst withDialogs = (WrappedComponent) => {\n  class WithDialogs extends React.Component {\n    state = {\n      showDialog: {\n        actionType: taskActions.None,\n        taskId: undefined,\n      },\n    };\n\n    setShowDialog = (actionType, taskId) => {\n      this.setState({\n        showDialog: { actionType, taskId },\n      });\n    };\n\n    onDialogClose = () => {\n      this.setState({ showDialog: {} });\n    };\n\n    getDialog = (taskManageFuncs, taskList) => {\n      // In case some dialog was requested to be shown, prepares the dialog component\n      // and provides it with the event handlers.\n      const { actionType, taskId } = this.state.showDialog;\n      if (!actionType) {\n        return null;\n      }\n\n      let DialogComponent;\n      const dialogProps = {\n        closeDialog: this.onDialogClose,\n      };\n\n      switch (actionType) {\n        case taskActions.TaskMarkDone:\n          DialogComponent = withSnackbar(TaskMarkDoneDialog);\n          dialogProps.onTaskMarkDone = taskManageFuncs.onTaskMarkDone;\n          break;\n        case taskActions.DeleteTask:\n          DialogComponent = withSnackbar(TaskDeleteDialog);\n          dialogProps.onDeleteTask = taskManageFuncs.onDeleteTask;\n          break;\n        case taskActions.ShowTaskInfo:\n          DialogComponent = TaskInfoDialog;\n          break;\n        case taskActions.EditTask:\n          DialogComponent = withSnackbar(TaskEditDialog);\n          dialogProps.onEditTask = taskManageFuncs.onEditTask;\n          break;\n        case taskActions.CreateTask:\n          DialogComponent = withSnackbar(TaskCreateDialog);\n          dialogProps.onCreateTask = taskManageFuncs.onCreateTask;\n          break;\n        default:\n          DialogComponent = null;\n          break;\n      }\n      if (!DialogComponent) {\n        return null;\n      }\n\n      if (DialogComponent && taskId) {\n        dialogProps.taskObject = taskList.find(task => task.id === taskId);\n      }\n\n      return <DialogComponent {...dialogProps} />;\n    };\n\n    render() {\n      return <WrappedComponent setShowDialog={this.setShowDialog} getDialog={this.getDialog} {...this.props} />;\n    }\n  }\n\n  WithDialogs.displayName = `withApi(${getDisplayName(WrappedComponent)})`;\n  return WithDialogs;\n};\n\nexport default withDialogs;\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    textAlign: 'left',\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbar: {\n    color: '#777',\n    flexWrap: 'wrap',\n  },\n  toolbarTitle: {\n    margin: '0 4em',\n    flexGrow: 1,\n  },\n  link: {\n    color: '#777',\n    margin: theme.spacing(1, 1.5),\n  },\n  profile: {\n    color: '#777',\n  },\n  accountCircle: {\n    color: '#777',\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nexport default function NavBar(props) {\n  const classes = useStyles();\n  return (\n    <AppBar position=\"static\" color=\"default\" elevation={0} className={classes.appBar}>\n      <Toolbar className={classes.toolbar}>\n        <Typography variant=\"h6\" noWrap className={classes.toolbarTitle}>\n          Task Board\n        </Typography>\n        <nav>\n          {!!props.profileUrl && (\n            <Button\n              href={props.profileUrl}\n              className={classes.profile}\n            >\n              {props.fullName}\n              <AccountCircle className={classes.accountCircle} />\n            </Button>\n          )}\n          <Button href=\"/accounts/logout/\" className={classes.link}>\n            Sign Out\n          </Button>\n        </nav>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { styled } from \"@material-ui/core/styles\";\nimport NavBar from './NavBar';\n\nconst StyledDiv = styled('div')({\n  width: '85%',\n  margin: 'auto',\n  overflowX: 'auto',\n  padding: '1px',\n});\n\nexport default function Layout({ children, profileUrl, fullName }) {\n  return (\n    <SnackbarProvider\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      autoHideDuration={2000}\n    >\n      <NavBar profileUrl={profileUrl} fullName={fullName} />\n      <StyledDiv>{children}</StyledDiv>\n    </SnackbarProvider>\n  );\n}","import React from 'react';\nimport memoizeOne from 'memoize-one';\nimport './App.css';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { blue } from '@material-ui/core/colors';\nimport TaskBoardHeader from './components/TaskBoardHeader';\nimport TaskList from './components/TaskList';\nimport { DEFAULT_LIMIT, DEFAULT_OFFSET, DEFAULT_STATUS_FILTER } from './constants';\nimport TasksStateContainer from './components/TasksStateContainer';\nimport withDialogs from './components/withDialogs';\nimport Layout from './components/Layout';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: { main: blue[800] },\n  },\n});\n\nconst getQueryObject = memoizeOne((searchValue, limit, offset, statusFilter) => ({\n  searchValue,\n  limit,\n  offset,\n  statusFilter,\n}));\n\nclass App extends React.Component {\n  state = {\n    currentUserId: null,\n    profileUrl: '',\n    fullName: '',\n    tasksTotalNumber: 0,\n    limit: DEFAULT_LIMIT,\n    offset: DEFAULT_OFFSET,\n    statusFilter: DEFAULT_STATUS_FILTER,\n    searchValue: '',\n  };\n\n  componentDidMount() {\n    fetch('api/globals/')\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            tasksTotalNumber: result.tasks_total,\n            currentUserId: result.current_user,\n            profileUrl: result.profile_url,\n            fullName: result.fullname,\n          });\n        },\n        error => this.setState({ error }),\n      );\n  }\n\n  onPageChanged = (pageNumber) => {\n    const offset = pageNumber * this.state.limit;\n    console.log(offset);\n    this.setState({ offset });\n  };\n\n  onTaskStatusFilterChanged = (selectedValue) => {\n    if (this.state.statusFilter !== selectedValue) {\n      this.setState({\n        limit: DEFAULT_LIMIT,\n        offset: DEFAULT_OFFSET,\n        statusFilter: selectedValue,\n      });\n    }\n  };\n\n  onSearchRequested = (value) => {\n    if (this.state.searchValue !== value) {\n      this.setState({\n        searchValue: value,\n        limit: DEFAULT_LIMIT,\n        offset: DEFAULT_OFFSET,\n        statusFilter: DEFAULT_STATUS_FILTER,\n      });\n    }\n  };\n\n  onTasksTotalNumberReceived = (newNumber) => {\n    if (this.state.tasksTotalNumber !== newNumber) {\n      this.setState({ tasksTotalNumber: newNumber });\n    }\n  };\n\n  render() {\n    const {\n      searchValue, limit, offset, tasksTotalNumber, currentUserId, statusFilter,\n      profileUrl, fullName,\n    } = this.state;\n\n    const { setShowDialog, getDialog } = this.props;\n\n    return (\n      <div className=\"App\">\n        <ThemeProvider theme={theme}>\n          <Layout profileUrl={profileUrl} fullName={fullName}>\n            <TaskBoardHeader\n              tasksTotalNumber={tasksTotalNumber}\n              limit={limit}\n              offset={offset}\n              onPageChange={this.onPageChanged}\n              onSearchRequested={this.onSearchRequested}\n              setShowDialog={setShowDialog}\n            />\n            <TasksStateContainer\n              query={getQueryObject(searchValue, limit, offset, statusFilter)}\n              onTotalNumberReceived={this.onTasksTotalNumberReceived}\n            >\n              {(taskManageFuncs, taskList) => (\n                <React.Fragment>\n                  <TaskList\n                    taskList={taskList}\n                    currentUserId={currentUserId}\n                    statusFilter={statusFilter}\n                    onStatusFilterChanged={this.onTaskStatusFilterChanged}\n                    setShowDialog={setShowDialog}\n                  />\n                  {getDialog(taskManageFuncs, taskList)}\n                </React.Fragment>\n              )}\n            </TasksStateContainer>\n          </Layout>\n        </ThemeProvider>\n      </div>\n    );\n  }\n}\n\nexport default withDialogs(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import jQuery from 'jquery';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport ajaxCsrfSetup from './utils';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n// setup jquery for CSRF tokens\njQuery.ajaxSetup({\n  // jQuery won't allow using the ajaxCsrfSetup function directly\n  beforeSend: ajaxCsrfSetup\n});\n","import $ from 'jquery';\n\n// --------------------------------------------------------------------\n//    Helpers\n// --------------------------------------------------------------------\n// CSRF helper functions taken directly from Django docs\nfunction csrfSafeMethod(method) {\n  // these HTTP methods do not require CSRF protection\n  return /^(GET|HEAD|OPTIONS|TRACE)$/i.test(method);\n}\n\nfunction getCookie(name) {\n  var cookieValue = null;\n  if (document.cookie && document.cookie != \"\") {\n    var cookies = document.cookie.split(\";\");\n    for (var i = 0; i < cookies.length; i++) {\n      var cookie = $.trim(cookies[i]);\n      // Does this cookie string begin with the name we want?\n      if (cookie.substring(0, name.length + 1) == name + \"=\") {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n}\n\nexport default function ajaxCsrfSetup(xhr, settings) {\n  if (!csrfSafeMethod(settings.type) && !this.crossDomain) {\n    // Send the token to same-origin, relative URLs only.\n    // Send the token only if the method warrants CSRF protection\n    // Using the CSRFToken value acquired earlier\n    const csrftoken = getCookie(\"csrftoken\");\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken);\n  }\n}"],"sourceRoot":""}